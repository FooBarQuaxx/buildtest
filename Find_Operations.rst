.. _Find_Operations:

Find Operations
---------------------



.. contents::
   :backlinks: none



buildtest comes with several find operation that includes
 - List software  (``buildtest --list-software``)
 - List easybuild toolchains (``buildtest --list-toolchains``)
 - List Software Version Relationship (``buildtest --software-version-relation``)
 - Find YAML configuration (``buildtest --find-yaml``)
 - Find test scripts (``buildtest --find-test``)
 - Find easyconfigs (``buildtest --easyconfigs-in-moduletrees``)



The buildtest find options can be summarized below

.. code::

        Find Options:
          buildtest options for finding software, toolchains, tests, yaml files

          -lt, --list-toolchain
                                retrieve a list of easybuild toolchain used for --toolchain option
          -ls, --list-unique-software
                                retrieve all unique software found in your module tree specified by BUILDTEST_EBROOT
          -svr, --software-version-relation
                                retrieve a relationship between software and version found in module files
          -fc FINDCONFIG, --findconfig FINDCONFIG
                                Find buildtest YAML config files found in BUILDTEST_CONFIGS_REPO. To find all yaml config
                                files use -fc all
          -ft FINDTEST, --findtest FINDTEST
                                Find test scripts generated by buildtest defined by BUILDTEST_TESTDIR. To find all test
                                scripts use -ft all
          -ecmt, --easyconfigs-in-moduletrees
                                Return a list of easyconfigs from a easybuild module tree



List Software
~~~~~~~~~~~~~~

buildtest can report the software list by running the following ``buildtest --list-software`` or 
short option ``buildtest -ls``


buildtest determines the software list based on the module trees specified in ``BUILDTEST_EBROOT``
and processes each module tree and returns a  unique software list 

.. program-output:: cat scripts/Find_Operations/softwarelist.txt

List Toolchains
~~~~~~~~~~~~~~~

buildtest can list the easybuild toolchain list by running ``buildtest --list-toolchains`` or
short option ``buildtest -lt``

This will get the same result defined by **eb --list-toolchains**, we have
taken the list of toolchains from eb and defined them in buildtest. Any app
built with the any of the toolchains can be used with buildtest to generate
tests.

.. program-output:: cat scripts/Find_Operations/toolchainlist.txt


Software Version Relationship
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you want to view a breakdown of all software by version and full path to modulefile
then you want to use ``buildtest --software-version-relation`` or short option 
``buildtest -svr``

The output will be sorted by software and each entry will correspond to a version. If 
a software has multiple versions installed, they will be represented in a separate row.
The ID corresponds to unique software and the Version column will represent the name
of module file along with the full path. Hidden modulefiles will be presented 
with a leading **.** followed by the version 

.. program-output:: cat scripts/Find_Operations/software_version.txt


Find YAML configs
~~~~~~~~~~~~~~~~~

To find all yaml configuration use the option ``buildtest --find-configs all`` or
short option ``buildtest -fc all``



This will give you an output of all .yaml files in $BUILDTEST_CONFIGS_REPO 
that is used to configure on your test scripts.

.. program-output:: cat scripts/Find_Operations/find_allyaml.txt


You can search yaml configuration by string match, if you know the name of the YAML file already. For instance if you
are interested in all yaml files with the word **hello** you can run ``buildtest -fc hello`` and this will get you

.. program-output:: cat scripts/Find_Operations/find_hello_yaml.txt

Find test scripts
~~~~~~~~~~~~~~~~~~~~~

To find all test scripts generated by buildtest you can run ``buildtest --find-test all`` or
short option ``buildtest -ft all``

This will report the full path to all tests currently generated by buildtest.

.. program-output:: cat scripts/Find_Operations/find_alltest.txt

The output of ``buildtest -ft all`` can be very long when you generate lots of tests, its better
to pipe with **grep** command or you can pass a string into ``buildtest -ft <string>`` which 
will do the match.

If you are interested in seeing tests with **gcc** you can run ``buildtest -ft gcc`` and this
will get you 

.. program-output:: cat scripts/Find_Operations/find_gcc_test.txt

List easyconfigs from module trees
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

buildtest can return a list of easyconfigs from module trees defined in ``BUILDTEST_EBROOT``.
You can run ``buildtest --easyconfigs-in-moduletrees`` or short option ``buildtest -ecmt``.

buildtest will report full path to easyconfigs and also report any errors if it can't find
any easyconfig. If you specify a module tree that is not built by easybuild you can expect 
some **warning** or **error** messages which is intended.

buildtest will attempt to search for any file with ``.eb`` extension  in ``easybuild`` directory
that is part of install directory of each software for every easybuild app.

.. code::

   [siddis14@amrndhl1157 buildtest-framework]$ buildtest -ecmt

   List of easyconfigs found in MODULETREES: ['/nfs/grid/software/RHEL6/general', '/nfs/grid/software/RHEL6/chemistry', '/nfs/grid/software/RHEL7/non-easybuild/modules/all', '/nfs/grid/software/easybuild/IvyBridge/redhat/7.3/modules/all', '/nfs/grid/software/easybuild/commons/modules/all', '/nfs/grid/software/RHEL7/medsci/modules/all', '/nfs/grid/software/RHEL7/easybuild/modules/all']

   ID   |    easyconfig path
   -----|--------------------------------------------------------------------
   1    | /nfs/grid/software/easybuild/IvyBridge/redhat/7.3/software/SQLite/3.21.0-GCCcore-6.4.0/easybuild/SQLite-3.21.0-GCCcore-6.4.0.eb
   2    | /nfs/grid/software/easybuild/IvyBridge/redhat/7.3/software/SQLite/3.20.1-GCCcore-6.4.0/easybuild/SQLite-3.20.1-GCCcore-6.4.0.eb
   3    | /nfs/grid/software/easybuild/IvyBridge/redhat/7.3/software/expat/2.2.4-GCCcore-6.4.0/easybuild/expat-2.2.4-GCCcore-6.4.0.eb
   4    | /nfs/grid/software/easybuild/IvyBridge/redhat/7.3/software/Tcl/8.6.7-GCCcore-6.4.0/easybuild/Tcl-8.6.7-GCCcore-6.4.0.eb
   5    | /nfs/grid/software/easybuild/IvyBridge/redhat/7.3/software/Tcl/8.6.8-GCCcore-6.4.0/easybuild/Tcl-8.6.8-GCCcore-6.4.0.eb
   6    | /nfs/grid/software/easybuild/IvyBridge/redhat/7.3/software/bzip2/1.0.6-GCCcore-6.4.0/easybuild/bzip2-1.0.6-GCCcore-6.4.0.eb
   7    | /nfs/grid/software/easybuild/IvyBridge/redhat/7.3/software/icc/2018.1.163-GCC-6.4.0-2.28/easybuild/icc-2018.1.163-GCC-6.4.0-2.28.eb
   8    | /nfs/grid/software/easybuild/IvyBridge/redhat/7.3/software/GDAL/2.2.2-intel-2018a-Python-2.7.14/easybuild/GDAL-2.2.2-intel-2018a-Python-2.7.14.eb
   9    | /nfs/grid/software/easybuild/IvyBridge/redhat/7.3/software/GCC/6.4.0-2.28/easybuild/GCC-6.4.0-2.28.eb
   10   | /nfs/grid/software/easybuild/IvyBridge/redhat/7.3/software/pkg-config/0.29.2-GCCcore-6.4.0/easybuild/pkg-config-0.29.2-GCCcore-6.4.0.eb
   11   | /nfs/grid/software/easybuild/IvyBridge/redhat/7.3/software/Tk/8.6.7-intel-2018a/easybuild/Tk-8.6.7-intel-2018a.eb



You may get some warning messages like the following

.. code::

   Reading File: /nfs/grid/software/RHEL6/general/use.own doesn't look like an easybuild generated module. Unable to find variable root

Or a message like the following

.. code::


   Could not find easyconfig in /nfs/grid/software/RHEL7/easybuild/software/Compiler/GCC/6.2.0-2.27/bzip2/1.0.6/easybuild


   
